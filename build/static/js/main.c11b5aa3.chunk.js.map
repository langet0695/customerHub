{"version":3,"sources":["components/CustomerTask.js","components/CustomerTaskList.js","pages/HomePage.js","pages/BillPayPage.js","data/CustomerTasks.js","data/EngagementTypes.js","pages/EngagementHistoryPage.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","className","id","type","description","CustomerTaskList","tasks","map","i","LogOutEventHandler","event","alert","preventDefault","HomePage","EngagementTypes","customerTasks","useState","key","setKey","color","setColor","phrase","setPhrase","alertState","setAlert","update","e","newKey","target","value","console","log","choices","class","onClick","engagement","to","href","title","LicenseCenter","learn","EngagementHistory","App","path","exact","CustomerTasks","Engagements","BillPayPage","EngagementHistoryPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c11b5aa3.chunk.js","sourcesContent":["import React from 'react';\n// import Count from './Count.js'\n\nfunction Task( task ) {\n    return (\n        <tr className=\"tasks\">\n            <td> {task.id} </td>\n            <td> {task.type} </td>\n            <td> {task.description} </td>\n        </tr>\n    );\n}\n\nexport default Task;","import React from 'react';\nimport Task from './CustomerTask';\n\nfunction CustomerTaskList({ tasks }) {\n    return (\n        <div>\n            <table>\n                {/* <caption>Open Actions / Tickets</caption> */}\n                <thead>\n                    <tr>\n                        <th> I.D. </th>\n                        <th> Type </th>\n                        <th> Description </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tasks.map((task, i) => <Task id={task.id} type={task.type} description={task.description} key={i} />)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default CustomerTaskList;","import React, {  useState } from 'react';\nimport { Link } from 'react-router-dom';\n// import Calendar from 'react-calendar'\nimport CustomerTaskList from './../components/CustomerTaskList.js';\nimport { MdOutlineArrowBackIosNew, MdOutlineClose } from 'react-icons/md';\n\n\nfunction LogOutEventHandler(event){\n    alert(`You have logged out.`)\n    event.preventDefault()\n}\n\nfunction HomePage({EngagementTypes, customerTasks } ) {\n    const [key, setKey] = useState(\"start\");\n    const [color, setColor] = useState(\"div1\")\n    const [phrase, setPhrase] = useState(\"How can we help you today?\")\n    const [alertState, setAlert] = useState(\"alert\")\n    \n    function updateAlert(e){\n        setAlert(\"alertHide\")\n    }\n\n    function reset(){setKey(\"start\"); setPhrase(\"How can we help you today?\")}\n\n    function update(e){\n        let newKey = e.target.value\n        console.log(newKey)\n        if (newKey==\"learn\"){setKey(1); setColor(\"div1\"); setPhrase(\"Learn how to leverage the Qualtrics platform\");} \n        if (newKey==\"react\"){setKey(2); setColor(\"div2\"); setPhrase(\"Get human assiatance from Qualtrics!\");} \n        if (newKey==\"mature\"){setKey(3); setColor(\"div3\"); setPhrase(\"Grow XM Skills & Become a Certified XM Professional\");} \n        if (newKey==\"guide\"){setKey(4); setColor(\"div4\"); setPhrase(\"Innovate, Expand and Maximize the value of your Program\");} \n    }\n\n    let choices = ''\n    if (key==\"start\"){choices = <div class=\"centerDiv\">\n                                    <p>{phrase}</p>\n                                        <div class=\"containerDiv\">\n                                            <button value=\"learn\" class=\"div1\" type=\"button\" onClick={update}>\n                                            Learn how to leverage the Qualtrics platform\n                                            </button>\n                                        </div>\n                                        <div class=\"containerDiv\">\n                                            <button value=\"react\" class=\"div2\" type=\"button\" onClick={update}>\n                                              Get human assiatance from Qualtrics!\n                                            </button>\n                                        </div>\n                                        <div class=\"containerDiv\">\n                                            <button value=\"mature\" class=\"div3\" type=\"button\" onClick={update}>\n                                              Grow XM Skills and Become a Certified XM Professional\n                                            </button>\n                                        </div>\n                                        <div class=\"containerDiv\" onClick={update}>\n                                            <button value=\"guide\"class=\"div4\" type=\"button\">\n                                            Innovate, Expand and Maximize the value of your Program\n                                            </button>\n                                        </div>\n                                </div>}\n    else{\n        choices= \n        <div class=\"centerDiv\">\n            <p> <MdOutlineArrowBackIosNew onClick={reset} /> {phrase}</p>\n                             {\n                                EngagementTypes[key].map((engagement,i) => \n                                <div class=\"tmpContainerDiv\" >\n                                    <button class={color} type=\"button\">\n                                        {engagement}\n                                    </button>\n                                </div>\n                            )\n                        }\n        </div>                       \n    }\n\n\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"toppane\">\n                    <div class=\"containerFullHeightDiv\">\n                        <div class=\"containerFullWidthDiv\">\n                            Acme Inc, welcome to the Qualtrics Services Offering Page!\n                        </div>\n                        <div class=\"containerFullWidthDiv\">\n                            <p class={alertState}>\n                            <MdOutlineClose onClick={updateAlert} /> \n                                Account Team Managed Alert\n                            </p>\n                        </div>\n                    </div>\n                    \n                    <div class=\"containerFullHeightDiv\">\n                        <table class=\"rightbutton\">\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td><button class=\"buttonstyle\" onClick={LogOutEventHandler} type=\"button\">Log out</button></td>\n                            </tr>\n                            <tr>\n                                <td><Link to=\"/licensecenter\"><button class=\"buttonstyle\" type=\"button\">Account Management</button></Link></td>\n                                <td><Link to=\"/engagementhistory\"><button class=\"buttonstyle\" type=\"button\">Engagement History</button></Link></td>\n                                <td><Link to=\"/customerHub\"><button class=\"buttonstyle\" type=\"button\">Resource Center</button></Link></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                \n                <div class=\"leftpane\">\n                    <div class='leftheader'>Recommended Resources</div>\n                    <div class=\"lefttopbox\">\n                        <h4>Qualtrics Xcellerate Training Platform</h4>\n                        <p>\n                            Train on the qualtrics platform <a href=\"https://basecamp.qualtrics.com/\" title=\"Go to Qualtrics Basecamp\">here</a>.\n                            Training solutions include certification, live webinars, on demand courses and more!\n                        </p>\n                    </div>\n                    <div class=\"leftbottombox\">Recommended Resource 2</div>\n                </div>\n                \n                <div class=\"middlepane\">\n                    {choices} \n                    {/* This is handled using if logic at the top */}\n                </div>\n                \n                <div class=\"rightpane\">\n                    <p>Open Actions / Tickets</p>\n                    <CustomerTaskList tasks={customerTasks}></CustomerTaskList>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { Link } from 'react-router-dom';\nimport CustomerTaskList from './../components/CustomerTaskList.js';\nimport Engagements from '../components/Engagements.js';\n\n\n\nfunction LicenseCenter({ EngagementTypes }) {\n    function LogOutEventHandler(event){\n        alert(`You have logged out.`)\n        event.preventDefault()\n    }\n\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"toppane\">\n                    <div class=\"containerFullHeightDiv\">\n                        <div class=\"containerFullWidthDiv\">\n                            Manage your account, contract and license settings here!\n                        </div>\n                        <div class=\"containerFullWidthDiv\"></div>\n                    </div>\n                    \n                    <div class=\"containerFullHeightDiv\">\n                        <table class=\"rightbutton\">\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td><button class=\"buttonstyle\" onClick={LogOutEventHandler} type=\"button\">Log out</button></td>\n                            </tr>\n                            <tr>\n                                <td><Link to=\"/licensecenter\"><button class=\"buttonstyle\" type=\"button\">Account Management</button></Link></td>\n                                <td><Link to=\"/engagementhistory\"><button class=\"buttonstyle\" type=\"button\">Engagement History</button></Link></td>\n                                <td><Link to=\"/customerHub\"><button class=\"buttonstyle\" type=\"button\">Resource Center</button></Link></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                \n                <div class=\"leftpane\">\n                    <div class=\"lefttopbox\">\n                        Custom calendar of upcoming events.\n                    </div>\n                    <div class=\"leftbottombox\">\n                    In Need of Assistance? Contact your CSR <a href=\"https://qglobalops.co1.qualtrics.com/jfe/form/SV_dneCmMmV9p9rwOy\" title=\"CS Intake\">here</a>!\n                    </div>\n                </div>\n                \n                <div class=\"halfpane\">\n                    <div class=\"centerDivBill\">\n                        <p> \n                            <h2>Contractual Controls</h2>\n                            <br></br>\n                            - Renewal Payment\n                            <br></br>\n                            - License Usage / Metrics Config\n                            <br></br>\n                            - License Tech Assessment\n                            <br></br>\n                            - Document Repository\n                            <p class=\"tab\">\n                                + Past / Current licenses\n                                <br></br>\n                                + Security Agreements\n                                <br></br>\n                                + Flagged Emails\n                                <br></br>\n                                + SOWs\n                            </p>\n                            - Upgrade Options\n                        </p>\n                    </div>\n                </div>\n                \n                <div class=\"halfpane\">\n                    <div class=\"centerDivBill\">\n                        <p>\n                            <h2>Program and Experience Controls</h2>\n                            <br></br>\n                            - Campaign Opt Status\n                            <p class=\"tab\">\n                                + Ops\n                                <br></br>\n                                + MKT\n                                <br></br>\n                                + CS\n                            </p>\n                            - Contact Validation\n                            <p class=\"tab\">\n                                + Brand Admins\n                                <br></br>\n                                + License Managers\n                                <br></br>\n                                + Decision Makers\n                                <br></br>\n                                + Company Hierarchy \n                            </p>\n                            - Brand Wide Communications\n                            <br></br>\n                            - Security Controls\n                            <br></br>\n                            - GDPR / Data Deletion\n                        </p>\n                    </div>\n                    {/* <CustomerTaskList tasks={customerTasks}></CustomerTaskList> */}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default LicenseCenter\n\n\n \n","const tasks = [\n    { id: '1PQ8', type: 'Support', description: 'Reports outage resolved. Confirm status in your account.' },\n    { id: 'B238', type: 'Renewal', description: 'Submit Payment for your 2022 renewal to renewals@qualtrics.com.' },\n    { id: '5A8P', type: 'Support', description: 'Please provide additional detail on the how we can replicate the survey flow in your ticket.' },\n    { id: 'N399', type: 'CS', description: 'Can you provide the KPIs of the program you are looking to build?' },\n];\n\nexport default tasks;","const learn = [\n    [\"I want to learn more about...\", \"I need tactical help from Qualtrics with...\", \"I am interested in maturing my program...\", \"I need guidance on how to...\"]\n    , [     \"Learning about platform incidents (e.g. offline data centers)\"\n          , \"Innovation webinar (Xcellerate Webinars)\"\n          , \"Technical documentation (e.g. Support Pages)\"\n          , \"Find Partner-specific support and resources (DSX)\"\n          , \"The latest in XM thought leadership (XMI)\"\n          , \"Product Demonstration (Pre-recorded Demos)\"\n      ]\n    , [   \"Paying my bill (Renewals)\"\n        , \"Technical trouble shooting (human support)\"\n        , \"Upgrading my account (CSR)\"\n        , \"Managing a GDPR data request (Security?)\"\n        , \"Escalating a support issue (TBD - automated process)\"\n        , \"Negotiating a renewal (CSR / Finance)\"\n        , \"Undertanding my license usage (Automated)\"\n        , \"Report a product issue (human support)\"\n        , \"Connecting with my account team generall (AE/CSR)\"\n        , \"Configuring my account profile (e.g. payment terms / email opt status)\"\n        , \"Discuss a downgrade (CSR)\"\n        , \"Other\"\n      ]\n    , [   \"Paid human technical support (TAM)\"\n        , \"Unpaid services XM adoption (CSM)\"\n        , \"Paid XM adoption (XM Scientists)\"\n        , \"XM Maturity working session (CSM)\"\n        , \"Knowldege sharing with another customer (CSM)\"\n        , \"Onsite Qualtrics Day (CSM/TAM)\"\n        , \"Partnering with Qualtrics to deliver panels (RS)\"\n        , \"Attending an in person event (e.g. X4)\"\n        , \"Earn your XM Fundamentals Certification\"\n      ]\n    , [   \"Paid research (RS)\"\n        , \"Become XM Certified (XMI)\"\n        , \"CSR program planning\"\n        , \"Systems Integration (CS Consulting || TSC)\"\n        , \"Find a partner (XMPN)\" \n        , \"XM Innovation Webinar / events (Xcelllerate)\"\n        , \"Build a program roadmap (CS Consulting)\"\n        , \"Perform a CX / EX maturity assessment (CSR)\"\n        , \"Research Program Review (CS Consulting)\"\n        , \"Data Flow / Management Best Practices (TSC || CS Consulting)\"\n        , \"Magic 3 Activation (CS Consulting)\"\n        , \"Other\"\n      ]\n\n];\n\n// const tasks = [\n//     { id: 'learn', type: 'Support', description: 'Reports outage resolved. Confirm status in your account.' },\n//     { id: 'react', type: 'Renewal', description: 'Submit Payment for your 2022 renewal to renewals@qualtrics.com.' },\n//     { id: 'guide', type: 'Support', description: 'Please provide additional detail on the how we can replicate the survey flow in your ticket.' },\n//     { id: 'mature', type: 'CS', description: 'Can you provide the KPIs of the program you are looking to build?' },\n// ];\n\n\nexport default learn;","import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { Link } from 'react-router-dom';\nimport CustomerTaskList from './../components/CustomerTaskList.js';\nimport Engagements from '../components/Engagements.js';\n\n\n\nfunction EngagementHistory({ EngagementTypes }) {\n    function LogOutEventHandler(event){\n        alert(`You have logged out.`)\n        event.preventDefault()\n    }\n\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"toppane\">\n                    <div class=\"containerFullHeightDiv\">\n                        <div class=\"containerFullWidthDiv\">\n                            See a history of all engagements within your account here!\n                        </div>\n                        <div class=\"containerFullWidthDiv\"></div>\n                    </div>\n                    \n                    <div class=\"containerFullHeightDiv\">\n                        <table class=\"rightbutton\">\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td><button class=\"buttonstyle\" onClick={LogOutEventHandler} type=\"button\">Log out</button></td>\n                            </tr>\n                            <tr>\n                                <td><Link to=\"/licensecenter\"><button class=\"buttonstyle\" type=\"button\">Account Management</button></Link></td>\n                                <td><Link to=\"/engagementhistory\"><button class=\"buttonstyle\" type=\"button\">Engagement History</button></Link></td>\n                                <td><Link to=\"/customerHub\"><button class=\"buttonstyle\" type=\"button\">Resource Center</button></Link></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                    <div class=\"centerDivBill\">\n                        <p> \n                            <h2>Engagement History</h2>\n                            <br></br>\n                            - Support Engagement \n                            <br></br>\n                            - CS Engagement\n                            <br></br>\n                            - Renewals Engagement\n                            <br></br>\n                            - and more...\n                        </p>\n                    </div>\n            </div>\n        </>\n    );\n}\n\nexport default EngagementHistory\n\n\n \n","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport React from 'react';\n// import StoreListPage from './pages/StoreListPage';\n// import ShoppingListPage from './pages/ShoppingListPage';\nimport HomePage from './pages/HomePage';\nimport BillPayPage from './pages/BillPayPage';\nimport CustomerTasks from './data/CustomerTasks.js'\nimport Engagements from './data/EngagementTypes'\nimport EngagementHistoryPage from './pages/EngagementHistoryPage';\n\n\nfunction App() {  \n\n  return (\n\n      <body  >\n            <Router>\n                <Route path=\"/customerHub\" exact>\n                  <HomePage customerTasks={CustomerTasks} EngagementTypes={Engagements}/>\n                </Route>\n                <Route path=\"/licensecenter\">\n                  <BillPayPage EngagementTypes={Engagements}/>\n                </Route>\n                <Route path=\"/engagementhistory\">\n                  <EngagementHistoryPage />\n                </Route>\n            </Router>\n      </body>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}